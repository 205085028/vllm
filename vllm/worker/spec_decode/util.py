import torch
from typing import List
from dataclasses import dataclass
from vllm.sequence import SequenceGroupMetadata

@dataclass
class SpeculativeProposals:
    """Sequences valid for speculative decoding and their corresponding
    speculative proposals generated by the draft worker.
    """
    # Sequences eligible for speculative decoding.
    spec_seqs: List[SequenceGroupMetadata]
    # Sequences not eligible for speculative decoding.
    non_spec_seqs: List[SequenceGroupMetadata]
    # All sequences in batch.
    all_seqs: List[SequenceGroupMetadata]
    # Indices of each seq group in the original seq_group_metadata_list
    # for reordering.
    original_indices: torch.Tensor
    # Proposal token ids and probs speculated by draft worker.
    proposal_token_ids: torch.Tensor
    proposal_probs: torch.Tensor

    def __repr__(self):
        return (f"SpeculativeProposals(spec_seqs={len(self.spec_seqs)}, "
                f"non_spec_seqs={len(self.non_spec_seqs)}, "
                f"all_seqs={len(self.all_seqs)}, "
                f"original_indices={self.original_indices}, "
                f"proposal_token_ids={self.proposal_token_ids.shape}, "
                f"proposal_probs={self.proposal_probs.shape})")
