# In this file, you can add more tests to run either by adding a new step or
# adding a new command to an existing step. See different options here for examples.
# This script will be feed into Jinja template in `test-template.j2` to generate
# the final pipeline yaml file.

steps:
- label: Regression Test
  command: pytest -v -s --forked test_regression.py
  working_dir: "/vllm-workspace/tests" # optional

- label: AsyncEngine Test
  command: pytest -v -s --forked async_engine

- label: Basic Correctness Test
  command: pytest -v -s --forked basic_correctness

- label: Core Test
  command: pytest -v -s --forked core

- label: Distributed Comm Ops Test
  command: pytest -v -s --forked test_comm_ops.py
  working_dir: "/vllm-workspace/tests/distributed"
  num_gpus: 2 # only support 1 or 2 for now.

- label: Distributed Correctness Test
  command: pytest -v -s --forked test_basic_distributed_correctness.py
  working_dir: "/vllm-workspace/tests/distributed"
  num_gpus: 2 # only support 1 or 2 for now.

- label: Engine Test
  command: pytest -v -s --forked engine tokenization test_sequence.py

- label: Entrypoints Test
  command: pytest -v -s --forked entrypoints

- label: Kernels Test %N
  command: pytest -v -s --forked kernels --shard-id=$$BUILDKITE_PARALLEL_JOB --num-shards=$$BUILDKITE_PARALLEL_JOB_COUNT
  parallelism: 4

- label: Models Test
  commands:
    - pytest -v -s --forked models
  soft_fail: true

- label: Prefix Caching Test
  commands:
    - pytest -v -s --forked prefix_caching

- label: Samplers Test
  command: pytest -v -s --forked samplers

- label: Worker Test
  command: pytest -v -s --forked worker

- label: Speculative decoding tests
  command: pytest -v -s --forked spec_decode

- label: LoRA Test %N
  command: pytest -v -s --forked lora --shard-id=$$BUILDKITE_PARALLEL_JOB --num-shards=$$BUILDKITE_PARALLEL_JOB_COUNT
  parallelism: 4

- label: Metrics Test
  command: pytest -v -s --forked metrics

- label: Benchmarks
  working_dir: "/vllm-workspace/.buildkite"
  commands:
  - pip install aiohttp
  - bash run-benchmarks.sh

- label: Documentation Build
  working_dir: "/vllm-workspace/docs"
  no_gpu: True
  commands:
  - pip install -r requirements-docs.txt
  - SPHINXOPTS=\"-W\" make html
